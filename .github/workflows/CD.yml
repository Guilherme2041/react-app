# Nome do fluxo
name: CD

# Aciona o fluxo quando:
on:
  # Houver um push na branch main
  push:
    branches: [ "main" ]
  # Permite a execução manual
  workflow_dispatch:

# Fluxo de trabalho
jobs:
 Tests:
    runs-on: ubuntu-latest
    
    # Passos do fluxo de trabalho
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3
        
      - name: Preparando Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      
      - name: Instalando dependências
        run: npm install

      - name: Executando testes
        run: npm run test -- --coverage
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
 Build_and_push:
    runs-on: ubuntu-latest
    needs: Tests
    # Passos do fluxo de trabalho
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3
        
      - name: Preparando Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      
      - name: Instalando dependências
        run: npm install
        
      - name: Npm build
        run: npm run build
        
      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Preparação do Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Etapa de build e push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/react-container:latest
          
 Deploy:
    runs-on: ubuntu-latest
    needs: Build_and_push
    # Passos do fluxo de trabalho
    steps:
      - name: Configuração SSH Azure
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/azure.key
          chmod 600 ~/.ssh/azure.key
          cat >>~/.ssh/config <<END
          Host azure
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/azure.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.AZURE_SSH_USER }}
          SSH_KEY: ${{ secrets.AZURE_SSH_KEY }}
          SSH_HOST: ${{ secrets.AZURE_SSH_HOST }}
          
      - name: Etapa de Deploy
        run: |
          ssh azure "sudo docker stop $CONTAINER"
          ssh azure "sudo docker rm $CONTAINER"
          ssh azure "sudo docker run -d -p 3000:3000 --name $CONTAINER -t $CONTAINER-PROJECT:latest"
        env:
          CONTAINER: react-app
          CONTAINER-PROJECT: ${{ secrets.DOCKERHUB_USERNAME }}/react-container
